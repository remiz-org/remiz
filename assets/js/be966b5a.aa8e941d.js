"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[330],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return g}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=c(r),g=a,m=d["".concat(p,".").concat(g)]||d[g]||u[g]||i;return r?n.createElement(m,o(o({ref:t},s),{},{components:r})):n.createElement(m,o({ref:t},s))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},6495:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return s},default:function(){return d}});var n=r(7462),a=r(3366),i=(r(7294),r(3905)),o=["components"],l={sidebar_position:4},p="Write your own packager",c={unversionedId:"tutorial/write-packager",id:"tutorial/write-packager",title:"Write your own packager",description:"Objectives",source:"@site/docs/tutorial/write-packager.mdx",sourceDirName:"tutorial",slug:"/tutorial/write-packager",permalink:"/remiz/docs/tutorial/write-packager",editUrl:"https://github.com/remiz-org/remiz/tree/main/docs/docs/tutorial/write-packager.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Write your first package configuration",permalink:"/remiz/docs/tutorial/package-configuration"},next:{title:"Building package",permalink:"/remiz/docs/tutorial/building-package"}},s=[{value:"Objectives",id:"objectives",children:[],level:2},{value:"Implement a simple packager",id:"implement-a-simple-packager",children:[],level:2},{value:"Declare packager",id:"declare-packager",children:[],level:2},{value:"Use it in your package configuration files",id:"use-it-in-your-package-configuration-files",children:[],level:2}],u={toc:s};function d(e){var t=e.components,r=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"write-your-own-packager"},"Write your own packager"),(0,i.kt)("h2",{id:"objectives"},"Objectives"),(0,i.kt)("p",null,"A packager lets you organize your project by components.\nEach packager is responsible for saving all assets (when building a package)\nand how to deploy them."),(0,i.kt)("p",null,"For example, if you want to bundle and deploy a dynamic web site, you could write\na packager responsible for the backend logic (Python scripts e.g),\nanother packager for the frontend part (in Javascript) and another one for\nyour database (like .sql dump)."),(0,i.kt)("p",null,"A packager could be written in any language, as long as the file(s) could be executed."),(0,i.kt)("h2",{id:"implement-a-simple-packager"},"Implement a simple packager"),(0,i.kt)("p",null,"Implemeting a packager is very straightforward. It consists of 2 main steps :"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"write the logic needed to build the package"),(0,i.kt)("li",{parentName:"ul"},"write the logic needed to deploy the package")),(0,i.kt)("p",null,"All the necessary informations needed for your packager are passed by argument."),(0,i.kt)("p",null,"For example, a good starting in Python could be :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'#!/usr/bin/python3\n\nimport argparse\n\ndef get_args():\n    parser = argparse.ArgumentParser(description=\'copy_files packager.\')\n\n    subparser = parser.add_subparsers(dest="subcommand", required=True)\n    build_parser = subparser.add_parser("build")\n    build_parser.add_argument(\'--path\', required=True)\n\n    deploy_parser = subparser.add_parser("deploy")\n    deploy_parser.add_argument(\'--path\', required=True)\n    deploy_parser.add_argument(\'--env\', required=True)\n\n    return parser.parse_known_args()\n...\nif __name__ == "__main__":\n    args, unknown_args = get_args()\n\n    if args.subcommand == "build":\n        build(args.path, unknown_args)\n\n    if args.subcommand == "deploy":\n        deploy(args.path, unknown_args, args.env)\n\n')),(0,i.kt)("p",null,"All you to do is implement ",(0,i.kt)("inlineCode",{parentName:"p"},"build")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"deploy")," functions."),(0,i.kt)("h2",{id:"declare-packager"},"Declare packager"),(0,i.kt)("p",null,"Before using a packager, you must declare it to Remiz via the global\nconfiguration file."),(0,i.kt)("p",null,"For example, if you want to register a 'foo' packager pointing to a Python\nscript, add it to the ",(0,i.kt)("inlineCode",{parentName:"p"},"[packagers]")," section :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-toml"},'foo = "path/to/foo/main.py"\n')),(0,i.kt)("h2",{id:"use-it-in-your-package-configuration-files"},"Use it in your package configuration files"),(0,i.kt)("p",null,"Once declared, you could use it in all packages configuration file that need it."),(0,i.kt)("p",null,"Simply add a section named after your packager, and add all entries required\nby your packager :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-toml"},'[foo]\ntest_1 = "./src/test_1.sh"\ntest_2 = "./src/test_2.py"\ntest_3 = [\n    "./data/1.csv",\n    "./data/2.csv",\n    "./data/3.csv",\n]\n')),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"When testing a packager, a good practice is to use the ",(0,i.kt)("inlineCode",{parentName:"p"},"unpack")," subcommand of\nRemiz and see if any files is missing."))))}d.isMDXComponent=!0}}]);